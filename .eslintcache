[{"C:\\Users\\omb\\Desktop\\pokedex\\src\\index.js":"1","C:\\Users\\omb\\Desktop\\pokedex\\src\\App.js":"2","C:\\Users\\omb\\Desktop\\pokedex\\src\\components\\PokemonInfo.js":"3","C:\\Users\\omb\\Desktop\\pokedex\\src\\components\\Pokemon.js":"4","C:\\Users\\omb\\Desktop\\pokedex\\src\\components\\Inputbox.js":"5","C:\\Users\\omb\\Desktop\\pokedex\\src\\components\\Chart.js":"6"},{"size":259,"mtime":1611759242288,"results":"7","hashOfConfig":"8"},{"size":1922,"mtime":1611773942265,"results":"9","hashOfConfig":"8"},{"size":2831,"mtime":1611773810853,"results":"10","hashOfConfig":"8"},{"size":4519,"mtime":1611761069006,"results":"11","hashOfConfig":"8"},{"size":406,"mtime":1611760503584,"results":"12","hashOfConfig":"8"},{"size":1757,"mtime":1611773933045,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"mk94z1",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\omb\\Desktop\\pokedex\\src\\index.js",[],["28","29"],"C:\\Users\\omb\\Desktop\\pokedex\\src\\App.js",[],"C:\\Users\\omb\\Desktop\\pokedex\\src\\components\\PokemonInfo.js",["30"],"C:\\Users\\omb\\Desktop\\pokedex\\src\\components\\Pokemon.js",["31"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, CardContent, Typography, Button, Box, IconButton, Chip } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport RotateIcon from '@material-ui/icons/RotateRight';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 350,\r\n        minHeight: 400,\r\n        position: 'relative'\r\n    },\r\n    button: {\r\n        position: 'absolute',\r\n        bottom: 0,\r\n        borderRadius: 0,\r\n        border: 'none',\r\n        borderTop: '1px solid lightgrey',\r\n        color: '#222',\r\n        '&:hover': {\r\n            background: \"lightgrey\",\r\n        },\r\n    },\r\n    iconRotate: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 10\r\n    },\r\n    chipGroup: {\r\n        marginBottom: 20,\r\n        marginTop: 20,\r\n        '& > *': {\r\n            marginRight: 5,\r\n        },\r\n    }\r\n});\r\n\r\nexport default function Pokemon(props) {\r\n    const classes = useStyles();\r\n    const { name } = props.pokemon;\r\n    const [pokemonData, setPokemonData] = useState();\r\n    const [pokemonBack, setPokemonBack] = useState(false);\r\n\r\n    const getPokemon = async () => {\r\n        const response = await axios({\r\n          method: 'GET',\r\n          url: `https://pokeapi.co/api/v2/pokemon/${name}`\r\n        })\r\n        \r\n        return response.data;\r\n    } \r\n\r\n    const getPokemonDescription = async (currentURL) => {\r\n        const response = await axios({\r\n            method: 'GET',\r\n            url: currentURL\r\n        })\r\n\r\n        const { flavor_text_entries: allLanguageDescriptions } = response.data;\r\n        const descriptionEN = allLanguageDescriptions.find((x => x.language.name === 'en'));\r\n          \r\n        return descriptionEN.flavor_text\r\n    };\r\n    \r\n    useEffect(() => {\r\n        (async () => {\r\n            const pokemonData = await getPokemon();\r\n            const pokemonDescription = await getPokemonDescription(pokemonData.species.url);\r\n            pokemonData[\"pokemonDescription\"] = pokemonDescription;\r\n            setPokemonData(pokemonData);\r\n            console.log(pokemonData);\r\n        })();\r\n    }, [name])\r\n\r\n    return (\r\n        <Box mt={3} mr={2} ml={2} mb={5}>\r\n            {\r\n                pokemonData &&\r\n                <Card className={classes.root}>\r\n                    <img src={!pokemonBack ? pokemonData.sprites.front_default : pokemonData.sprites.back_default} alt=\"\"></img>\r\n                    <CardContent>\r\n                        <IconButton className={classes.iconRotate} onClick={() => setPokemonBack((value) => !value)}>\r\n                            <RotateIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h4\">\r\n                            #{pokemonData.id}\r\n                        </Typography>\r\n                        <Typography gutterBottom variant=\"h5\">\r\n                            { \r\n                                `\r\n                                    ${name.split('')[0].toUpperCase() + name.slice(1)}\r\n                                ` \r\n                            }\r\n                        </Typography>\r\n                        <div className={classes.chipGroup}>\r\n                            {\r\n                                pokemonData.types.map((type, index) => {\r\n                                    return (\r\n                                        <Chip key={index} label={type.type.name} mr={2}/>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            {pokemonData.pokemonDescription}\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <Link \r\n                        to={{\r\n                            pathname: `/pokemon/${name}`,\r\n                            state: {info: pokemonData}\r\n                        }}\r\n                    >\r\n                        <Button\r\n                            size=\"large\"\r\n                            className={classes.button}\r\n                            fullWidth={true}\r\n                            variant=\"outlined\"\r\n                        >\r\n                            View info\r\n                        </Button>\r\n                    </Link>\r\n                </Card>\r\n            }\r\n        </Box>\r\n    )\r\n}\r\n\r\n\r\n","C:\\Users\\omb\\Desktop\\pokedex\\src\\components\\Inputbox.js",[],"C:\\Users\\omb\\Desktop\\pokedex\\src\\components\\Chart.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":29,"column":8,"nodeType":"38","endLine":29,"endColumn":21,"suggestions":"39"},{"ruleId":"36","severity":1,"message":"40","line":74,"column":8,"nodeType":"38","endLine":74,"endColumn":14,"suggestions":"41"},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'changeSideBarValue'. Either include it or remove the dependency array.","ArrayExpression",["44"],"React Hook useEffect has a missing dependency: 'getPokemon'. Either include it or remove the dependency array.",["45"],"no-global-assign","no-unsafe-negation",{"desc":"46","fix":"47"},{"desc":"48","fix":"49"},"Update the dependencies array to be: [changeSideBarValue, pokemonInfo]",{"range":"50","text":"51"},"Update the dependencies array to be: [getPokemon, name]",{"range":"52","text":"53"},[843,856],"[changeSideBarValue, pokemonInfo]",[2208,2214],"[getPokemon, name]"]